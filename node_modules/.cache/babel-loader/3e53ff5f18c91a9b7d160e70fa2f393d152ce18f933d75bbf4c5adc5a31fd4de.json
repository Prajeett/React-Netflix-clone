{"ast":null,"code":"var _jsxFileName = \"/Users/prazeet/React-Netflix-clone/netflix-clone/src/Row.js\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"./request\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [movie, setMovie] = useState([]);\nuseEffect(props => {\n  const fetchData = async () => {\n    const request = await axios.get(props.fetchUrl);\n    setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n    return request;\n  };\n  fetchData();\n}, []);\nconsole.log(movie);\nconst Row = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: \" haha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}')`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner_title\",\n          children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner_button\",\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner_button\",\n            children: \"My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner_description\",\n          children: [truncate(`${movie === null || movie === void 0 ? void 0 : movie.overview}`, 165), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","requests","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","movie","setMovie","props","fetchData","request","get","fetchUrl","data","results","Math","floor","random","length","console","log","Row","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","original_name","truncate","overview","_c","$RefreshReg$"],"sources":["/Users/prazeet/React-Netflix-clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport requests from \"./request\";\nimport axios from \"./axios\";\n\nconst [movie, setMovie] = useState([]);\n\nuseEffect((props) => {\nconst fetchData = async () => {\n    const request = await axios.get(props.fetchUrl);\n    setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n    return request;\n  }\n  fetchData();\n}, []);\nconsole.log(movie);\n\nconst Row = () => {\n  return (\n    <>\n      <div className=\"row\"> haha</div>\n      <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">{movie?.title  || movie?.original_name}</h1>\n\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n\n        <h1 className=\"banner_description\">\n          {truncate(`${movie?.overview}`,165\n          )}{\" \"}\n        </h1>\n      </div>\n\n      <div className=\"banner--fadeBottom\" />\n    </header>\n    </>\n  );\n};\n\nexport default Row;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}