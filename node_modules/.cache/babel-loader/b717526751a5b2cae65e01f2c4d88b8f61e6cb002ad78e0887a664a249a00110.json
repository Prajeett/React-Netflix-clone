{"ast":null,"code":"var _jsxFileName = \"/Users/prazeet/React-Netflix-clone/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios.js';\nimport row from \"./row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = _ref => {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow = false\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const baseURL = \"https://image.tmdb.org/t/p/original/\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    };\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","row","jsxDEV","_jsxDEV","Row","_ref","_s","title","fetchUrl","isLargeRow","movies","setMovies","baseURL","fetchData","request","get","data","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","backdrop_path","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/prazeet/React-Netflix-clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport axios from './axios.js'\nimport row from \"./row.css\"\n\nconst Row = ({title,fetchUrl,isLargeRow =false}) => {\nconst [movies, setMovies] = useState([])\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n    \nuseEffect(() => {\n  const fetchData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results)\n    return request;\n  }\n  fetchData();\n}, [fetchUrl])\n\n\n\n\n\n\n\n  return (\n    <div className='row'>\n\n    <h2>{title}</h2>\n\n    <div className=\"row_posters\">\n\n    {movies.map(movie =>(\n        <img key={movie.id} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} src={`${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\n    ))}\n    </div>\n\n    </div>\n  )\n}\n\nexport default Row"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,GAAG,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAvC;IAACC,KAAK;IAACC,QAAQ;IAACC,UAAU,GAAE;EAAK,CAAC,GAAAJ,IAAA;EAC/C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMc,OAAO,GAAG,sCAAsC;EAEtDb,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACP,QAAQ,CAAC;MACzCG,SAAS,CAACG,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAQZ,oBACEL,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEpBhB,OAAA;MAAAgB,QAAA,EAAKZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhBpB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EAE3BT,MAAM,CAACc,GAAG,CAACC,KAAK,iBACbtB,OAAA;QAAoBe,SAAS,EAAG,cAAaT,UAAU,IAAI,iBAAkB,EAAE;QAACiB,GAAG,EAAG,GAAEd,OAAQ,GAAEH,UAAU,GAAGgB,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACG,aAAc,EAAE;QAACC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAAhKL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0J,CAC/K;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAjCKF,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmCT,eAAeA,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}